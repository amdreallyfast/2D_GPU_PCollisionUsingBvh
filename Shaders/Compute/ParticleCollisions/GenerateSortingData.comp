// REQUIRES Version.comp
// REQUIRES ComputeShaderWorkGroupSizes.comp
// REQUIRES SsboBufferBindings.comp
// REQUIRES CrossShaderUniformLocations.comp
// REQUIRES ParticleBuffer.comp
// REQUIRES ParticleSortingDataBuffer.comp
// REQUIRES PositionToMortonCode.comp

// Y and Z work group sizes default to 1
layout (local_size_x = PARALLEL_SORT_WORK_GROUP_SIZE_X) in;

/*------------------------------------------------------------------------------------------------
Description:
    Generates a Morton Code for the current thread's particle's position.
Parameters: None
Returns:    None
Creator:    John Cox, 5/2017
------------------------------------------------------------------------------------------------*/
void main()
{
    uint threadIndex = gl_GlobalInvocationID.x;
    if (threadIndex >= uMaxNumParticles) // or uMaxNumParticleSortingData
    {
        return;
    }

    uint mortonCode = PositionToMortonCode(AllParticles[threadIndex]._pos);
    if (AllParticles[threadIndex]._isActive == 0)
    {
        // override the code with a number that will cause it to be sorted to the back
        mortonCode = 0xffffffff;
    }

    AllParticleSortingData[threadIndex]._sortingData = mortonCode;
    AllParticleSortingData[threadIndex]._preSortedParticleIndex = int(threadIndex);
}
