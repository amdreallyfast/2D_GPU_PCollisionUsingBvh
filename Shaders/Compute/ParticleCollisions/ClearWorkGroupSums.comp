// REQUIRES Version.comp
// REQUIRES ComputeShaderWorkGroupSizes.comp
// REQUIRES CrossShaderUniformLocations.comp
// REQUIRES SsboBufferBindings.comp
// REQUIRES PrefixScanBuffer.comp

// Y and Z work group sizes default to 1
layout (local_size_x = WORK_GROUP_SIZE_X) in;


/*------------------------------------------------------------------------------------------------
Description:
    Clears out the PrefixSumsOfWorkGroupSums array.

    This is more than just cleanup.  The prefix scan on all the data will only fill out 
    the per-work-group sum for each work group in use, NOT for each work group that is NOT in 
    use.  If the sums of the work groups that are not in use are not cleared, then the 
    subsequent scan of all per-work-group sums will give an erroneous value to 
    PrefixScanBuffer::totalNumberOfOnes.

    Note: This reset cannot be performed in one of the prefix scan shaders because there is no 
    guaranteed work group launch order.  If I tried to say that, at the beginning of the 
    parallel prefix scan, work group 0's threads will clean out the PrefixSumsOfWorkGroupSums 
    array, it may be that (for example) work group 57 will launch before work group 0, so work 
    group 57 would record a value in PrefixSumsOfWorkGroupSums[57], but then work group 0 comes 
    along afterwards and sets it to 0.  Whoops.  The only way to guarantee that these will be 
    set to 0 before running the prefix scan is to set them to 0 in a shader that runs prior.
Parameters: None
Returns:    None
Creator:    John Cox, 5/2017
------------------------------------------------------------------------------------------------*/
void main()
{
    // Note: This shader should only be dispatched with a single work group that is the size of 
    // PARALLEL_SORT_WORK_GROUP_SIZE.  The PrefixScanBuffer::PrefixSumsOfWorkGroupSums array is
    // twice this size.  If a larger work group is launched, then there will be memory writes 
    // that are out of bounds.
    PrefixSumsOfWorkGroupSums[(gl_LocalInvocationID.x * 2)] = 0;
    PrefixSumsOfWorkGroupSums[(gl_LocalInvocationID.x * 2) + 1] = 0;
}
